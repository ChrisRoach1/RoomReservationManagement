@model RoomReservationManagement.Models.res_rooms

@{
    ViewBag.Title = "AddNewRoom";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create new Room</h2>

<hr />
@using (Html.BeginForm("AddNewRoom", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.room_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.room_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.room_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.room_cap, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.room_cap, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.room_cap, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.num_comp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.num_comp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.num_comp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.num_chairs, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.num_chairs, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.num_chairs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.num_tables, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.num_tables, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.num_tables, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.board_typ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.board_typ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.board_typ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.network_ind, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.network_ind, new SelectList(ViewBag.indicators, "sourceValue", "display"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.network_ind, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.telecon_sys, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.telecon_sys, new SelectList(ViewBag.indicators, "sourceValue", "display"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.telecon_sys, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.proj_ind, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.proj_ind, new SelectList(ViewBag.indicators, "sourceValue", "display"), "", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.proj_ind, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group" style="margin-top: 30px;">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-secondary" />
            </div>
        </div>
    </div>
}


@if (ViewBag.successValue)
{
    //used to display success message after a reservation is made
    <script>
        Swal.fire(
            'Success!',
            'A new room has been created.',
            'success'
        ).then((result) => {
            window.location = '/';
        })
    </script>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
